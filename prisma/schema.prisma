// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workouts  Workout[]
  exercises Exercise[]

  @@map("users")
}

model Workout {
  id        Int               @id @default(autoincrement())
  name      String
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User              @relation(fields: [userId], references: [id])
  exercises WorkoutExercise[]

  @@map("workouts")
}

model Exercise {
  id       Int    @id @default(autoincrement())
  name     String
  category MuscleGroup
  userId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  workouts WorkoutExercise[]

  @@map("exercises")
}

enum MuscleGroup {
  Abs
  Back
  Chest
  Shoulders
  Biceps
  Triceps
  Legs
  Cardio
}

model WorkoutExercise {
  id          Int      @id @default(autoincrement())
  workoutId   Int
  exerciseId  Int
  sets        Int
  reps        Int
  weight      Float
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workout     Workout  @relation(fields: [workoutId], references: [id])
  exercise    Exercise @relation(fields: [exerciseId], references: [id])

  @@map("workout_exercises")
}
